[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://dis6i1gixmk7h"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_dp4gx"]
parameter_name = "ExplosionColor"
default_value_enabled = true
default_value = Color(1, 0.537255, 0, 1)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_k8b2y"]
parameter_name = "NoiseTexture"
color_default = 2
texture_filter = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_udo4v"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3jphs"]
source = 5
texture = SubResource("NoiseTexture2D_udo4v")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_st7g0"]
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ExplosionColor : source_color = vec4(1.000000, 0.537255, 0.000000, 1.000000);
uniform sampler2D NoiseTexture : hint_default_transparent, filter_nearest;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ExplosionColor;


// Input:5
	vec2 n_out5p0 = UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(NoiseTexture, n_out5p0);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out4p0.x;
	EMISSION = vec3(n_out2p0.xyz);


}
"
graph_offset = Vector2(-259.073, 108.114)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_dp4gx")
nodes/fragment/2/position = Vector2(-60, 40)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_k8b2y")
nodes/fragment/3/position = Vector2(-280, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_3jphs")
nodes/fragment/4/position = Vector2(60, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_st7g0")
nodes/fragment/5/position = Vector2(-300, 260)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 0, 1, 5, 0, 4, 0, 2, 0, 0, 5, 2, 0, 0, 0)
